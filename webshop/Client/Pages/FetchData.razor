@page "/fetchdata"
@layout MainLayout
@using webshop.Shared
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
    <button class="btn btn-primary" disabled=@LessDisabled @onclick="() => FiveLess()">5 less</button>
    <button class="btn btn-primary" @onclick="FiveMore">5 more</button>
}

@code {

    private Boolean LessDisabled = false;

    private int amount = 10;

    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    { 
    forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>(GetURI);
    }

    private async Task FiveMore()
    {
        amount += 5;
        LessDisabled = amount == 0;
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>(GetURI);
    }

    private async Task FiveLess()
    {
        amount = Math.Max(0, amount - 5);
        LessDisabled = amount == 0;
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>(GetURI);
    }

    private string GetURI
    {
        get
        {
            return "api/vejr/" + amount;
        }
    }
}

